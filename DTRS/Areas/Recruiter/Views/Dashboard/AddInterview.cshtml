@model DTRS.Models.SubmissionMaster
@using DTRS.Models
@{
    ViewBag.Title = "AddInterview";
    Layout = "~/Views/Shared/_mainDesignLayout.cshtml";
    dbReportingSystemEntities db = new dbReportingSystemEntities();
}

<div class="col-md-12 col-sm-12 ">
    <div class="x_panel">
        <div class="x_title">
            <h2>Add Following Details</h2>
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                </li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <a class="dropdown-item" href="#">Settings 1</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#">Settings 2</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a class="close-link"><i class="fa fa-close"></i></a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            <br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <form id="demo-form2" method="post" action="@Url.Action("AddInterview","Dashboard",new { @area = "recruiter"})" data-parsley-validate class="form-horizontal form-label-left">

                @if (Request.QueryString["sid"] != null)
                {
                    <input type="hidden" value="@Request.QueryString["sid"].ToString()" id="SId" name="SId" />
                }
                <div class="item form-group">
                    <label class="col-form-label col-md-3 col-sm-3 label-align" for="first-name">
                        Date <span class="required">*</span>
                    </label>
                    <div class="col-md-6 col-sm-6 ">
                        <input type="date" id="InterviewDate" name="InterviewDate" required="required" class="form-control ">
                    </div>
                </div>

                <div class="item form-group">
                    <label class="col-form-label col-md-3 col-sm-3 label-align" for="first-name">
                        Time <span class="required">*</span>
                    </label>
                    <div class="col-md-6 col-sm-6 ">
                        <input type="time" id="InterviewTime" name="InterviewTime" required="required" class="form-control ">
                    </div>
                </div>






                <div class="item form-group">
                    <label class="col-form-label col-md-3 col-sm-3 label-align" for="first-name">
                        Job Description <span class="required">*</span>
                    </label>
                    <div class="col-md-6 col-sm-6 ">
                        <textarea id="JobDescription" name="JobDescription"></textarea>

                        @*<input type="text" id="JobDescription" name="JobDescription" required="required" class="form-control ">*@
                    </div>
                </div>
                <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

                <script>
                    tinymce.init({
                        selector: 'textarea#JobDescription',
                        menubar: false
                    });
                </script>


                <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>


                <div class="item form-group">
                    <label class="col-form-label col-md-3 col-sm-3 label-align" for="first-name">
                        Portal Title <span class="required">*</span>
                    </label>
                    <div class="col-md-6 col-sm-6 ">
                        <select class="form-control" name="AssingedTo">
                            <option>Select</option>
                            @foreach (var item in db.UserLoginMasters.Where(a => a.UserRole == 5))
                            {
                                <option value="@item.RocketUserName">@item.FullName</option>
                            }
                        </select>
                        <hr />
                        <input type="text" placeholder="Enter Name if Not in List" id="AssingedToOther" name="AssingedToOther" class="form-control ">
                    </div>
                </div>
                <div class="ln_solid">
                </div>
                <div class="item form-group">
                    <div class="col-md-6 col-sm-6 offset-md-3">
                        <a href="@Url.Action("Index","Dashboard", new { @area = "recruiter"})" class="btn btn-primary" type="button">Back</a>
                        @*<button class="btn btn-primary" type="reset">Reset</button>*@
                        <button type="submit" class="btn btn-success">Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @*<div class="form-horizontal">
            <h4>SubmissionMaster</h4>
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.JobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InterviewStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InterviewStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InterviewStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InterviewDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InterviewDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AssingedTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AssingedTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AssingedTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InterviewTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InterviewTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InterviewTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InterviewFeedBack, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InterviewFeedBack, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InterviewFeedBack, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>*@
}

